/**
 * Autogenerated by Thrift Compiler (0.19.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef PROTOCOL_TYPES_H
#define PROTOCOL_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>
/* custom thrift includes */

/* begin types */

enum _ProtocolDataType {
  PROTOCOL_DATA_TYPE_BOOL = 1,
  PROTOCOL_DATA_TYPE_UINT_8 = 2,
  PROTOCOL_DATA_TYPE_UINT_16 = 3,
  PROTOCOL_DATA_TYPE_UINT_32 = 4,
  PROTOCOL_DATA_TYPE_INT_32 = 5,
  PROTOCOL_DATA_TYPE_FLOAT = 6,
  PROTOCOL_DATA_TYPE_STRING = 7
};
typedef enum _ProtocolDataType ProtocolDataType;

/* return the name of the constant */
const char *
toString_ProtocolDataType(int value); 

enum _ProtocolConstantType {
  PROTOCOL_CONSTANT_TYPE_BOOL = 1,
  PROTOCOL_CONSTANT_TYPE_INTEGER = 2,
  PROTOCOL_CONSTANT_TYPE_FLOAT = 3,
  PROTOCOL_CONSTANT_TYPE_STRING = 4
};
typedef enum _ProtocolConstantType ProtocolConstantType;

/* return the name of the constant */
const char *
toString_ProtocolConstantType(int value); 

enum _ProtocolExpressionNodeType {
  PROTOCOL_EXPRESSION_NODE_TYPE_OPERAND = 1,
  PROTOCOL_EXPRESSION_NODE_TYPE_OPERATOR = 2
};
typedef enum _ProtocolExpressionNodeType ProtocolExpressionNodeType;

/* return the name of the constant */
const char *
toString_ProtocolExpressionNodeType(int value); 

enum _ProtocolExpressionOperandType {
  PROTOCOL_EXPRESSION_OPERAND_TYPE_CONSTANT = 1,
  PROTOCOL_EXPRESSION_OPERAND_TYPE_COLUMN_PTR = 2
};
typedef enum _ProtocolExpressionOperandType ProtocolExpressionOperandType;

/* return the name of the constant */
const char *
toString_ProtocolExpressionOperandType(int value); 

enum _ProtocolOperatorType {
  PROTOCOL_OPERATOR_TYPE_NOT = 1,
  PROTOCOL_OPERATOR_TYPE_AND = 2,
  PROTOCOL_OPERATOR_TYPE_OR = 3,
  PROTOCOL_OPERATOR_TYPE_EQUAL = 4,
  PROTOCOL_OPERATOR_TYPE_NOT_EQUAL = 5,
  PROTOCOL_OPERATOR_TYPE_LESS = 6,
  PROTOCOL_OPERATOR_TYPE_NOT_LESS = 7,
  PROTOCOL_OPERATOR_TYPE_GREATER = 8,
  PROTOCOL_OPERATOR_TYPE_NOT_GREATER = 9,
  PROTOCOL_OPERATOR_TYPE_SUBSTR = 10
};
typedef enum _ProtocolOperatorType ProtocolOperatorType;

/* return the name of the constant */
const char *
toString_ProtocolOperatorType(int value); 

enum _ProtocolDataSourceNodeType {
  PROTOCOL_DATA_SOURCE_NODE_TYPE_TABLE = 1,
  PROTOCOL_DATA_SOURCE_NODE_TYPE_EXPRESSION = 2
};
typedef enum _ProtocolDataSourceNodeType ProtocolDataSourceNodeType;

/* return the name of the constant */
const char *
toString_ProtocolDataSourceNodeType(int value); 

enum _ProtocolQueryType {
  PROTOCOL_QUERY_TYPE_SELECT = 1,
  PROTOCOL_QUERY_TYPE_DELETE = 2,
  PROTOCOL_QUERY_TYPE_INSERT = 3,
  PROTOCOL_QUERY_TYPE_UPDATE = 4,
  PROTOCOL_QUERY_TYPE_CREATE_TABLE = 5,
  PROTOCOL_QUERY_TYPE_DELETE_TABLE = 6
};
typedef enum _ProtocolQueryType ProtocolQueryType;

/* return the name of the constant */
const char *
toString_ProtocolQueryType(int value); 

enum _ProtocolQueryResultCode {
  PROTOCOL_QUERY_RESULT_CODE_OK = 1,
  PROTOCOL_QUERY_RESULT_CODE_ERROR = 2
};
typedef enum _ProtocolQueryResultCode ProtocolQueryResultCode;

/* return the name of the constant */
const char *
toString_ProtocolQueryResultCode(int value); 

/* struct ProtocolConstantUnion */
struct _ProtocolConstantUnion
{ 
  ThriftStruct parent; 

  /* public */
  gboolean bool_constant;
  gboolean __isset_bool_constant;
  gint32 integer_constant;
  gboolean __isset_integer_constant;
  gdouble float_constant;
  gboolean __isset_float_constant;
  gchar * string_constant;
  gboolean __isset_string_constant;
};
typedef struct _ProtocolConstantUnion ProtocolConstantUnion;

struct _ProtocolConstantUnionClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolConstantUnionClass ProtocolConstantUnionClass;

GType protocol_constant_union_get_type (void);
#define TYPE_PROTOCOL_CONSTANT_UNION (protocol_constant_union_get_type())
#define PROTOCOL_CONSTANT_UNION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_CONSTANT_UNION, ProtocolConstantUnion))
#define PROTOCOL_CONSTANT_UNION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_CONSTANT_UNION, ProtocolConstantUnionClass))
#define IS_PROTOCOL_CONSTANT_UNION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_CONSTANT_UNION))
#define IS_PROTOCOL_CONSTANT_UNION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_CONSTANT_UNION))
#define PROTOCOL_CONSTANT_UNION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_CONSTANT_UNION, ProtocolConstantUnionClass))

/* struct ProtocolConstant */
struct _ProtocolConstant
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolConstantType type;
  gboolean __isset_type;
  ProtocolConstantUnion * value;
  gboolean __isset_value;
};
typedef struct _ProtocolConstant ProtocolConstant;

struct _ProtocolConstantClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolConstantClass ProtocolConstantClass;

GType protocol_constant_get_type (void);
#define TYPE_PROTOCOL_CONSTANT (protocol_constant_get_type())
#define PROTOCOL_CONSTANT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_CONSTANT, ProtocolConstant))
#define PROTOCOL_CONSTANT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_CONSTANT, ProtocolConstantClass))
#define IS_PROTOCOL_CONSTANT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_CONSTANT))
#define IS_PROTOCOL_CONSTANT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_CONSTANT))
#define PROTOCOL_CONSTANT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_CONSTANT, ProtocolConstantClass))

/* struct ProtocolVariable */
struct _ProtocolVariable
{ 
  ThriftStruct parent; 

  /* public */
  gchar * name;
  gboolean __isset_name;
};
typedef struct _ProtocolVariable ProtocolVariable;

struct _ProtocolVariableClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolVariableClass ProtocolVariableClass;

GType protocol_variable_get_type (void);
#define TYPE_PROTOCOL_VARIABLE (protocol_variable_get_type())
#define PROTOCOL_VARIABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_VARIABLE, ProtocolVariable))
#define PROTOCOL_VARIABLE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_VARIABLE, ProtocolVariableClass))
#define IS_PROTOCOL_VARIABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_VARIABLE))
#define IS_PROTOCOL_VARIABLE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_VARIABLE))
#define PROTOCOL_VARIABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_VARIABLE, ProtocolVariableClass))

/* struct ProtocolColumnPtr */
struct _ProtocolColumnPtr
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolVariable * table_name;
  gboolean __isset_table_name;
  ProtocolVariable * column_name;
  gboolean __isset_column_name;
};
typedef struct _ProtocolColumnPtr ProtocolColumnPtr;

struct _ProtocolColumnPtrClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolColumnPtrClass ProtocolColumnPtrClass;

GType protocol_column_ptr_get_type (void);
#define TYPE_PROTOCOL_COLUMN_PTR (protocol_column_ptr_get_type())
#define PROTOCOL_COLUMN_PTR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_COLUMN_PTR, ProtocolColumnPtr))
#define PROTOCOL_COLUMN_PTR_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_COLUMN_PTR, ProtocolColumnPtrClass))
#define IS_PROTOCOL_COLUMN_PTR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_COLUMN_PTR))
#define IS_PROTOCOL_COLUMN_PTR_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_COLUMN_PTR))
#define PROTOCOL_COLUMN_PTR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_COLUMN_PTR, ProtocolColumnPtrClass))

/* struct ProtocolProjection */
struct _ProtocolProjection
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * column_ptrs;
  gboolean __isset_column_ptrs;
};
typedef struct _ProtocolProjection ProtocolProjection;

struct _ProtocolProjectionClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolProjectionClass ProtocolProjectionClass;

GType protocol_projection_get_type (void);
#define TYPE_PROTOCOL_PROJECTION (protocol_projection_get_type())
#define PROTOCOL_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_PROJECTION, ProtocolProjection))
#define PROTOCOL_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_PROJECTION, ProtocolProjectionClass))
#define IS_PROTOCOL_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_PROJECTION))
#define IS_PROTOCOL_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_PROJECTION))
#define PROTOCOL_PROJECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_PROJECTION, ProtocolProjectionClass))

/* struct ProtocolExpressionOperandUnion */
struct _ProtocolExpressionOperandUnion
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolConstant * constant_operand;
  gboolean __isset_constant_operand;
  ProtocolColumnPtr * column_ptr_operand;
  gboolean __isset_column_ptr_operand;
};
typedef struct _ProtocolExpressionOperandUnion ProtocolExpressionOperandUnion;

struct _ProtocolExpressionOperandUnionClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolExpressionOperandUnionClass ProtocolExpressionOperandUnionClass;

GType protocol_expression_operand_union_get_type (void);
#define TYPE_PROTOCOL_EXPRESSION_OPERAND_UNION (protocol_expression_operand_union_get_type())
#define PROTOCOL_EXPRESSION_OPERAND_UNION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_EXPRESSION_OPERAND_UNION, ProtocolExpressionOperandUnion))
#define PROTOCOL_EXPRESSION_OPERAND_UNION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_EXPRESSION_OPERAND_UNION, ProtocolExpressionOperandUnionClass))
#define IS_PROTOCOL_EXPRESSION_OPERAND_UNION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_EXPRESSION_OPERAND_UNION))
#define IS_PROTOCOL_EXPRESSION_OPERAND_UNION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_EXPRESSION_OPERAND_UNION))
#define PROTOCOL_EXPRESSION_OPERAND_UNION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_EXPRESSION_OPERAND_UNION, ProtocolExpressionOperandUnionClass))

/* struct ProtocolExpressionOperand */
struct _ProtocolExpressionOperand
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolExpressionOperandType type;
  gboolean __isset_type;
  ProtocolExpressionOperandUnion * operand;
  gboolean __isset_operand;
};
typedef struct _ProtocolExpressionOperand ProtocolExpressionOperand;

struct _ProtocolExpressionOperandClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolExpressionOperandClass ProtocolExpressionOperandClass;

GType protocol_expression_operand_get_type (void);
#define TYPE_PROTOCOL_EXPRESSION_OPERAND (protocol_expression_operand_get_type())
#define PROTOCOL_EXPRESSION_OPERAND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_EXPRESSION_OPERAND, ProtocolExpressionOperand))
#define PROTOCOL_EXPRESSION_OPERAND_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_EXPRESSION_OPERAND, ProtocolExpressionOperandClass))
#define IS_PROTOCOL_EXPRESSION_OPERAND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_EXPRESSION_OPERAND))
#define IS_PROTOCOL_EXPRESSION_OPERAND_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_EXPRESSION_OPERAND))
#define PROTOCOL_EXPRESSION_OPERAND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_EXPRESSION_OPERAND, ProtocolExpressionOperandClass))

/* struct ProtocolExpressionOperator */
struct _ProtocolExpressionOperator
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolOperatorType type;
  gboolean __isset_type;
};
typedef struct _ProtocolExpressionOperator ProtocolExpressionOperator;

struct _ProtocolExpressionOperatorClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolExpressionOperatorClass ProtocolExpressionOperatorClass;

GType protocol_expression_operator_get_type (void);
#define TYPE_PROTOCOL_EXPRESSION_OPERATOR (protocol_expression_operator_get_type())
#define PROTOCOL_EXPRESSION_OPERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_EXPRESSION_OPERATOR, ProtocolExpressionOperator))
#define PROTOCOL_EXPRESSION_OPERATOR_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_EXPRESSION_OPERATOR, ProtocolExpressionOperatorClass))
#define IS_PROTOCOL_EXPRESSION_OPERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_EXPRESSION_OPERATOR))
#define IS_PROTOCOL_EXPRESSION_OPERATOR_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_EXPRESSION_OPERATOR))
#define PROTOCOL_EXPRESSION_OPERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_EXPRESSION_OPERATOR, ProtocolExpressionOperatorClass))

/* struct ProtocolExpressionNodeUnion */
struct _ProtocolExpressionNodeUnion
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolExpressionOperand * operand;
  gboolean __isset_operand;
  ProtocolExpressionOperator * operator;
  gboolean __isset_operator;
};
typedef struct _ProtocolExpressionNodeUnion ProtocolExpressionNodeUnion;

struct _ProtocolExpressionNodeUnionClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolExpressionNodeUnionClass ProtocolExpressionNodeUnionClass;

GType protocol_expression_node_union_get_type (void);
#define TYPE_PROTOCOL_EXPRESSION_NODE_UNION (protocol_expression_node_union_get_type())
#define PROTOCOL_EXPRESSION_NODE_UNION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_EXPRESSION_NODE_UNION, ProtocolExpressionNodeUnion))
#define PROTOCOL_EXPRESSION_NODE_UNION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_EXPRESSION_NODE_UNION, ProtocolExpressionNodeUnionClass))
#define IS_PROTOCOL_EXPRESSION_NODE_UNION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_EXPRESSION_NODE_UNION))
#define IS_PROTOCOL_EXPRESSION_NODE_UNION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_EXPRESSION_NODE_UNION))
#define PROTOCOL_EXPRESSION_NODE_UNION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_EXPRESSION_NODE_UNION, ProtocolExpressionNodeUnionClass))

/* struct ProtocolExpressionNode */
struct _ProtocolExpressionNode
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolExpressionNodeType type;
  gboolean __isset_type;
  ProtocolExpressionNodeUnion * value;
  gboolean __isset_value;
};
typedef struct _ProtocolExpressionNode ProtocolExpressionNode;

struct _ProtocolExpressionNodeClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolExpressionNodeClass ProtocolExpressionNodeClass;

GType protocol_expression_node_get_type (void);
#define TYPE_PROTOCOL_EXPRESSION_NODE (protocol_expression_node_get_type())
#define PROTOCOL_EXPRESSION_NODE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_EXPRESSION_NODE, ProtocolExpressionNode))
#define PROTOCOL_EXPRESSION_NODE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_EXPRESSION_NODE, ProtocolExpressionNodeClass))
#define IS_PROTOCOL_EXPRESSION_NODE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_EXPRESSION_NODE))
#define IS_PROTOCOL_EXPRESSION_NODE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_EXPRESSION_NODE))
#define PROTOCOL_EXPRESSION_NODE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_EXPRESSION_NODE, ProtocolExpressionNodeClass))

/* struct ProtocolExpression */
struct _ProtocolExpression
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * list;
  gboolean __isset_list;
};
typedef struct _ProtocolExpression ProtocolExpression;

struct _ProtocolExpressionClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolExpressionClass ProtocolExpressionClass;

GType protocol_expression_get_type (void);
#define TYPE_PROTOCOL_EXPRESSION (protocol_expression_get_type())
#define PROTOCOL_EXPRESSION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_EXPRESSION, ProtocolExpression))
#define PROTOCOL_EXPRESSION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_EXPRESSION, ProtocolExpressionClass))
#define IS_PROTOCOL_EXPRESSION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_EXPRESSION))
#define IS_PROTOCOL_EXPRESSION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_EXPRESSION))
#define PROTOCOL_EXPRESSION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_EXPRESSION, ProtocolExpressionClass))

/* struct ProtocolDataSourceTable */
struct _ProtocolDataSourceTable
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolVariable * table_name;
  gboolean __isset_table_name;
  ProtocolVariable * variable_name;
  gboolean __isset_variable_name;
};
typedef struct _ProtocolDataSourceTable ProtocolDataSourceTable;

struct _ProtocolDataSourceTableClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolDataSourceTableClass ProtocolDataSourceTableClass;

GType protocol_data_source_table_get_type (void);
#define TYPE_PROTOCOL_DATA_SOURCE_TABLE (protocol_data_source_table_get_type())
#define PROTOCOL_DATA_SOURCE_TABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_DATA_SOURCE_TABLE, ProtocolDataSourceTable))
#define PROTOCOL_DATA_SOURCE_TABLE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_DATA_SOURCE_TABLE, ProtocolDataSourceTableClass))
#define IS_PROTOCOL_DATA_SOURCE_TABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_DATA_SOURCE_TABLE))
#define IS_PROTOCOL_DATA_SOURCE_TABLE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_DATA_SOURCE_TABLE))
#define PROTOCOL_DATA_SOURCE_TABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_DATA_SOURCE_TABLE, ProtocolDataSourceTableClass))

/* struct ProtocolDataSourceUnion */
struct _ProtocolDataSourceUnion
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolDataSourceTable * table;
  gboolean __isset_table;
  ProtocolExpression * expression;
  gboolean __isset_expression;
};
typedef struct _ProtocolDataSourceUnion ProtocolDataSourceUnion;

struct _ProtocolDataSourceUnionClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolDataSourceUnionClass ProtocolDataSourceUnionClass;

GType protocol_data_source_union_get_type (void);
#define TYPE_PROTOCOL_DATA_SOURCE_UNION (protocol_data_source_union_get_type())
#define PROTOCOL_DATA_SOURCE_UNION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_DATA_SOURCE_UNION, ProtocolDataSourceUnion))
#define PROTOCOL_DATA_SOURCE_UNION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_DATA_SOURCE_UNION, ProtocolDataSourceUnionClass))
#define IS_PROTOCOL_DATA_SOURCE_UNION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_DATA_SOURCE_UNION))
#define IS_PROTOCOL_DATA_SOURCE_UNION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_DATA_SOURCE_UNION))
#define PROTOCOL_DATA_SOURCE_UNION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_DATA_SOURCE_UNION, ProtocolDataSourceUnionClass))

/* struct ProtocolDataSourceNode */
struct _ProtocolDataSourceNode
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolDataSourceNodeType type;
  gboolean __isset_type;
  ProtocolDataSourceUnion * value;
  gboolean __isset_value;
};
typedef struct _ProtocolDataSourceNode ProtocolDataSourceNode;

struct _ProtocolDataSourceNodeClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolDataSourceNodeClass ProtocolDataSourceNodeClass;

GType protocol_data_source_node_get_type (void);
#define TYPE_PROTOCOL_DATA_SOURCE_NODE (protocol_data_source_node_get_type())
#define PROTOCOL_DATA_SOURCE_NODE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_DATA_SOURCE_NODE, ProtocolDataSourceNode))
#define PROTOCOL_DATA_SOURCE_NODE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_DATA_SOURCE_NODE, ProtocolDataSourceNodeClass))
#define IS_PROTOCOL_DATA_SOURCE_NODE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_DATA_SOURCE_NODE))
#define IS_PROTOCOL_DATA_SOURCE_NODE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_DATA_SOURCE_NODE))
#define PROTOCOL_DATA_SOURCE_NODE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_DATA_SOURCE_NODE, ProtocolDataSourceNodeClass))

/* struct ProtocolDataSource */
struct _ProtocolDataSource
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * list;
  gboolean __isset_list;
};
typedef struct _ProtocolDataSource ProtocolDataSource;

struct _ProtocolDataSourceClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolDataSourceClass ProtocolDataSourceClass;

GType protocol_data_source_get_type (void);
#define TYPE_PROTOCOL_DATA_SOURCE (protocol_data_source_get_type())
#define PROTOCOL_DATA_SOURCE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_DATA_SOURCE, ProtocolDataSource))
#define PROTOCOL_DATA_SOURCE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_DATA_SOURCE, ProtocolDataSourceClass))
#define IS_PROTOCOL_DATA_SOURCE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_DATA_SOURCE))
#define IS_PROTOCOL_DATA_SOURCE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_DATA_SOURCE))
#define PROTOCOL_DATA_SOURCE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_DATA_SOURCE, ProtocolDataSourceClass))

/* struct ProtocolAssignment */
struct _ProtocolAssignment
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolColumnPtr * to;
  gboolean __isset_to;
  ProtocolExpressionOperand * what;
  gboolean __isset_what;
};
typedef struct _ProtocolAssignment ProtocolAssignment;

struct _ProtocolAssignmentClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolAssignmentClass ProtocolAssignmentClass;

GType protocol_assignment_get_type (void);
#define TYPE_PROTOCOL_ASSIGNMENT (protocol_assignment_get_type())
#define PROTOCOL_ASSIGNMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_ASSIGNMENT, ProtocolAssignment))
#define PROTOCOL_ASSIGNMENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_ASSIGNMENT, ProtocolAssignmentClass))
#define IS_PROTOCOL_ASSIGNMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_ASSIGNMENT))
#define IS_PROTOCOL_ASSIGNMENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_ASSIGNMENT))
#define PROTOCOL_ASSIGNMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_ASSIGNMENT, ProtocolAssignmentClass))

/* struct ProtocolFilter */
struct _ProtocolFilter
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolExpression * expression;
  gboolean __isset_expression;
};
typedef struct _ProtocolFilter ProtocolFilter;

struct _ProtocolFilterClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolFilterClass ProtocolFilterClass;

GType protocol_filter_get_type (void);
#define TYPE_PROTOCOL_FILTER (protocol_filter_get_type())
#define PROTOCOL_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_FILTER, ProtocolFilter))
#define PROTOCOL_FILTER_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_FILTER, ProtocolFilterClass))
#define IS_PROTOCOL_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_FILTER))
#define IS_PROTOCOL_FILTER_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_FILTER))
#define PROTOCOL_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_FILTER, ProtocolFilterClass))

/* struct ProtocolColumnDef */
struct _ProtocolColumnDef
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolDataType type;
  gboolean __isset_type;
  ProtocolVariable * name;
  gboolean __isset_name;
};
typedef struct _ProtocolColumnDef ProtocolColumnDef;

struct _ProtocolColumnDefClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolColumnDefClass ProtocolColumnDefClass;

GType protocol_column_def_get_type (void);
#define TYPE_PROTOCOL_COLUMN_DEF (protocol_column_def_get_type())
#define PROTOCOL_COLUMN_DEF(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_COLUMN_DEF, ProtocolColumnDef))
#define PROTOCOL_COLUMN_DEF_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_COLUMN_DEF, ProtocolColumnDefClass))
#define IS_PROTOCOL_COLUMN_DEF(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_COLUMN_DEF))
#define IS_PROTOCOL_COLUMN_DEF_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_COLUMN_DEF))
#define PROTOCOL_COLUMN_DEF_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_COLUMN_DEF, ProtocolColumnDefClass))

/* struct ProtocolSelectQuery */
struct _ProtocolSelectQuery
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolDataSource * data_source;
  gboolean __isset_data_source;
  ProtocolFilter * filter;
  gboolean __isset_filter;
  ProtocolProjection * projection;
  gboolean __isset_projection;
};
typedef struct _ProtocolSelectQuery ProtocolSelectQuery;

struct _ProtocolSelectQueryClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolSelectQueryClass ProtocolSelectQueryClass;

GType protocol_select_query_get_type (void);
#define TYPE_PROTOCOL_SELECT_QUERY (protocol_select_query_get_type())
#define PROTOCOL_SELECT_QUERY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_SELECT_QUERY, ProtocolSelectQuery))
#define PROTOCOL_SELECT_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_SELECT_QUERY, ProtocolSelectQueryClass))
#define IS_PROTOCOL_SELECT_QUERY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_SELECT_QUERY))
#define IS_PROTOCOL_SELECT_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_SELECT_QUERY))
#define PROTOCOL_SELECT_QUERY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_SELECT_QUERY, ProtocolSelectQueryClass))

/* struct ProtocolDeleteQuery */
struct _ProtocolDeleteQuery
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolDataSource * data_source;
  gboolean __isset_data_source;
  ProtocolFilter * filter;
  gboolean __isset_filter;
};
typedef struct _ProtocolDeleteQuery ProtocolDeleteQuery;

struct _ProtocolDeleteQueryClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolDeleteQueryClass ProtocolDeleteQueryClass;

GType protocol_delete_query_get_type (void);
#define TYPE_PROTOCOL_DELETE_QUERY (protocol_delete_query_get_type())
#define PROTOCOL_DELETE_QUERY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_DELETE_QUERY, ProtocolDeleteQuery))
#define PROTOCOL_DELETE_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_DELETE_QUERY, ProtocolDeleteQueryClass))
#define IS_PROTOCOL_DELETE_QUERY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_DELETE_QUERY))
#define IS_PROTOCOL_DELETE_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_DELETE_QUERY))
#define PROTOCOL_DELETE_QUERY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_DELETE_QUERY, ProtocolDeleteQueryClass))

/* struct ProtocolInsertQuery */
struct _ProtocolInsertQuery
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolVariable * table_name;
  gboolean __isset_table_name;
  GPtrArray * data;
  gboolean __isset_data;
};
typedef struct _ProtocolInsertQuery ProtocolInsertQuery;

struct _ProtocolInsertQueryClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolInsertQueryClass ProtocolInsertQueryClass;

GType protocol_insert_query_get_type (void);
#define TYPE_PROTOCOL_INSERT_QUERY (protocol_insert_query_get_type())
#define PROTOCOL_INSERT_QUERY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_INSERT_QUERY, ProtocolInsertQuery))
#define PROTOCOL_INSERT_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_INSERT_QUERY, ProtocolInsertQueryClass))
#define IS_PROTOCOL_INSERT_QUERY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_INSERT_QUERY))
#define IS_PROTOCOL_INSERT_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_INSERT_QUERY))
#define PROTOCOL_INSERT_QUERY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_INSERT_QUERY, ProtocolInsertQueryClass))

/* struct ProtocolUpdateQuery */
struct _ProtocolUpdateQuery
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolDataSource * data_source;
  gboolean __isset_data_source;
  ProtocolFilter * filter;
  gboolean __isset_filter;
  GPtrArray * assignments;
  gboolean __isset_assignments;
};
typedef struct _ProtocolUpdateQuery ProtocolUpdateQuery;

struct _ProtocolUpdateQueryClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolUpdateQueryClass ProtocolUpdateQueryClass;

GType protocol_update_query_get_type (void);
#define TYPE_PROTOCOL_UPDATE_QUERY (protocol_update_query_get_type())
#define PROTOCOL_UPDATE_QUERY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_UPDATE_QUERY, ProtocolUpdateQuery))
#define PROTOCOL_UPDATE_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_UPDATE_QUERY, ProtocolUpdateQueryClass))
#define IS_PROTOCOL_UPDATE_QUERY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_UPDATE_QUERY))
#define IS_PROTOCOL_UPDATE_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_UPDATE_QUERY))
#define PROTOCOL_UPDATE_QUERY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_UPDATE_QUERY, ProtocolUpdateQueryClass))

/* struct ProtocolCreateTableQuery */
struct _ProtocolCreateTableQuery
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolVariable * table_name;
  gboolean __isset_table_name;
  GPtrArray * defs;
  gboolean __isset_defs;
};
typedef struct _ProtocolCreateTableQuery ProtocolCreateTableQuery;

struct _ProtocolCreateTableQueryClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolCreateTableQueryClass ProtocolCreateTableQueryClass;

GType protocol_create_table_query_get_type (void);
#define TYPE_PROTOCOL_CREATE_TABLE_QUERY (protocol_create_table_query_get_type())
#define PROTOCOL_CREATE_TABLE_QUERY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_CREATE_TABLE_QUERY, ProtocolCreateTableQuery))
#define PROTOCOL_CREATE_TABLE_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_CREATE_TABLE_QUERY, ProtocolCreateTableQueryClass))
#define IS_PROTOCOL_CREATE_TABLE_QUERY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_CREATE_TABLE_QUERY))
#define IS_PROTOCOL_CREATE_TABLE_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_CREATE_TABLE_QUERY))
#define PROTOCOL_CREATE_TABLE_QUERY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_CREATE_TABLE_QUERY, ProtocolCreateTableQueryClass))

/* struct ProtocolDeleteTableQuery */
struct _ProtocolDeleteTableQuery
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolVariable * table_name;
  gboolean __isset_table_name;
};
typedef struct _ProtocolDeleteTableQuery ProtocolDeleteTableQuery;

struct _ProtocolDeleteTableQueryClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolDeleteTableQueryClass ProtocolDeleteTableQueryClass;

GType protocol_delete_table_query_get_type (void);
#define TYPE_PROTOCOL_DELETE_TABLE_QUERY (protocol_delete_table_query_get_type())
#define PROTOCOL_DELETE_TABLE_QUERY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_DELETE_TABLE_QUERY, ProtocolDeleteTableQuery))
#define PROTOCOL_DELETE_TABLE_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_DELETE_TABLE_QUERY, ProtocolDeleteTableQueryClass))
#define IS_PROTOCOL_DELETE_TABLE_QUERY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_DELETE_TABLE_QUERY))
#define IS_PROTOCOL_DELETE_TABLE_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_DELETE_TABLE_QUERY))
#define PROTOCOL_DELETE_TABLE_QUERY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_DELETE_TABLE_QUERY, ProtocolDeleteTableQueryClass))

/* struct ProtocolQueryUnion */
struct _ProtocolQueryUnion
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolSelectQuery * select;
  gboolean __isset_select;
  ProtocolDeleteQuery * delete;
  gboolean __isset_delete;
  ProtocolInsertQuery * insert;
  gboolean __isset_insert;
  ProtocolUpdateQuery * update;
  gboolean __isset_update;
  ProtocolCreateTableQuery * create_table;
  gboolean __isset_create_table;
  ProtocolDeleteTableQuery * delete_table;
  gboolean __isset_delete_table;
};
typedef struct _ProtocolQueryUnion ProtocolQueryUnion;

struct _ProtocolQueryUnionClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolQueryUnionClass ProtocolQueryUnionClass;

GType protocol_query_union_get_type (void);
#define TYPE_PROTOCOL_QUERY_UNION (protocol_query_union_get_type())
#define PROTOCOL_QUERY_UNION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_QUERY_UNION, ProtocolQueryUnion))
#define PROTOCOL_QUERY_UNION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_QUERY_UNION, ProtocolQueryUnionClass))
#define IS_PROTOCOL_QUERY_UNION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_QUERY_UNION))
#define IS_PROTOCOL_QUERY_UNION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_QUERY_UNION))
#define PROTOCOL_QUERY_UNION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_QUERY_UNION, ProtocolQueryUnionClass))

/* struct ProtocolQuery */
struct _ProtocolQuery
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolQueryType type;
  gboolean __isset_type;
  ProtocolQueryUnion * query;
  gboolean __isset_query;
};
typedef struct _ProtocolQuery ProtocolQuery;

struct _ProtocolQueryClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolQueryClass ProtocolQueryClass;

GType protocol_query_get_type (void);
#define TYPE_PROTOCOL_QUERY (protocol_query_get_type())
#define PROTOCOL_QUERY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_QUERY, ProtocolQuery))
#define PROTOCOL_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_QUERY, ProtocolQueryClass))
#define IS_PROTOCOL_QUERY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_QUERY))
#define IS_PROTOCOL_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_QUERY))
#define PROTOCOL_QUERY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_QUERY, ProtocolQueryClass))

/* struct SelectQueryResult */
struct _SelectQueryResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * defs;
  gboolean __isset_defs;
  gint32 count;
  gboolean __isset_count;
  GPtrArray * data;
  gboolean __isset_data;
};
typedef struct _SelectQueryResult SelectQueryResult;

struct _SelectQueryResultClass
{
  ThriftStructClass parent;
};
typedef struct _SelectQueryResultClass SelectQueryResultClass;

GType select_query_result_get_type (void);
#define TYPE_SELECT_QUERY_RESULT (select_query_result_get_type())
#define SELECT_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SELECT_QUERY_RESULT, SelectQueryResult))
#define SELECT_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SELECT_QUERY_RESULT, SelectQueryResultClass))
#define IS_SELECT_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SELECT_QUERY_RESULT))
#define IS_SELECT_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SELECT_QUERY_RESULT))
#define SELECT_QUERY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SELECT_QUERY_RESULT, SelectQueryResultClass))

/* struct InsertQueryResult */
struct _InsertQueryResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 count;
  gboolean __isset_count;
};
typedef struct _InsertQueryResult InsertQueryResult;

struct _InsertQueryResultClass
{
  ThriftStructClass parent;
};
typedef struct _InsertQueryResultClass InsertQueryResultClass;

GType insert_query_result_get_type (void);
#define TYPE_INSERT_QUERY_RESULT (insert_query_result_get_type())
#define INSERT_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_INSERT_QUERY_RESULT, InsertQueryResult))
#define INSERT_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_INSERT_QUERY_RESULT, InsertQueryResultClass))
#define IS_INSERT_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_INSERT_QUERY_RESULT))
#define IS_INSERT_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_INSERT_QUERY_RESULT))
#define INSERT_QUERY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_INSERT_QUERY_RESULT, InsertQueryResultClass))

/* struct DeleteQueryResult */
struct _DeleteQueryResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 count;
  gboolean __isset_count;
};
typedef struct _DeleteQueryResult DeleteQueryResult;

struct _DeleteQueryResultClass
{
  ThriftStructClass parent;
};
typedef struct _DeleteQueryResultClass DeleteQueryResultClass;

GType delete_query_result_get_type (void);
#define TYPE_DELETE_QUERY_RESULT (delete_query_result_get_type())
#define DELETE_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DELETE_QUERY_RESULT, DeleteQueryResult))
#define DELETE_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DELETE_QUERY_RESULT, DeleteQueryResultClass))
#define IS_DELETE_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DELETE_QUERY_RESULT))
#define IS_DELETE_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DELETE_QUERY_RESULT))
#define DELETE_QUERY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DELETE_QUERY_RESULT, DeleteQueryResultClass))

/* struct UpdateQueryResult */
struct _UpdateQueryResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 count;
  gboolean __isset_count;
};
typedef struct _UpdateQueryResult UpdateQueryResult;

struct _UpdateQueryResultClass
{
  ThriftStructClass parent;
};
typedef struct _UpdateQueryResultClass UpdateQueryResultClass;

GType update_query_result_get_type (void);
#define TYPE_UPDATE_QUERY_RESULT (update_query_result_get_type())
#define UPDATE_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UPDATE_QUERY_RESULT, UpdateQueryResult))
#define UPDATE_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_UPDATE_QUERY_RESULT, UpdateQueryResultClass))
#define IS_UPDATE_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UPDATE_QUERY_RESULT))
#define IS_UPDATE_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_UPDATE_QUERY_RESULT))
#define UPDATE_QUERY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UPDATE_QUERY_RESULT, UpdateQueryResultClass))

/* struct CreateTableQueryResult */
struct _CreateTableQueryResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * defs;
  gboolean __isset_defs;
};
typedef struct _CreateTableQueryResult CreateTableQueryResult;

struct _CreateTableQueryResultClass
{
  ThriftStructClass parent;
};
typedef struct _CreateTableQueryResultClass CreateTableQueryResultClass;

GType create_table_query_result_get_type (void);
#define TYPE_CREATE_TABLE_QUERY_RESULT (create_table_query_result_get_type())
#define CREATE_TABLE_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CREATE_TABLE_QUERY_RESULT, CreateTableQueryResult))
#define CREATE_TABLE_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CREATE_TABLE_QUERY_RESULT, CreateTableQueryResultClass))
#define IS_CREATE_TABLE_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CREATE_TABLE_QUERY_RESULT))
#define IS_CREATE_TABLE_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CREATE_TABLE_QUERY_RESULT))
#define CREATE_TABLE_QUERY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CREATE_TABLE_QUERY_RESULT, CreateTableQueryResultClass))

/* struct DeleteTableQueryResult */
struct _DeleteTableQueryResult
{ 
  ThriftStruct parent; 

  /* public */
};
typedef struct _DeleteTableQueryResult DeleteTableQueryResult;

struct _DeleteTableQueryResultClass
{
  ThriftStructClass parent;
};
typedef struct _DeleteTableQueryResultClass DeleteTableQueryResultClass;

GType delete_table_query_result_get_type (void);
#define TYPE_DELETE_TABLE_QUERY_RESULT (delete_table_query_result_get_type())
#define DELETE_TABLE_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DELETE_TABLE_QUERY_RESULT, DeleteTableQueryResult))
#define DELETE_TABLE_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DELETE_TABLE_QUERY_RESULT, DeleteTableQueryResultClass))
#define IS_DELETE_TABLE_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DELETE_TABLE_QUERY_RESULT))
#define IS_DELETE_TABLE_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DELETE_TABLE_QUERY_RESULT))
#define DELETE_TABLE_QUERY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DELETE_TABLE_QUERY_RESULT, DeleteTableQueryResultClass))

/* struct ProtocolQueryResult */
struct _ProtocolQueryResult
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolQueryResultCode code;
  gboolean __isset_code;
  ProtocolQueryType type;
  gboolean __isset_type;
  SelectQueryResult * select;
  gboolean __isset_select;
  InsertQueryResult * insert;
  gboolean __isset_insert;
  DeleteQueryResult * delete;
  gboolean __isset_delete;
  UpdateQueryResult * update;
  gboolean __isset_update;
  CreateTableQueryResult * create_table;
  gboolean __isset_create_table;
  DeleteTableQueryResult * delete_table;
  gboolean __isset_delete_table;
  gchar * error_message;
  gboolean __isset_error_message;
};
typedef struct _ProtocolQueryResult ProtocolQueryResult;

struct _ProtocolQueryResultClass
{
  ThriftStructClass parent;
};
typedef struct _ProtocolQueryResultClass ProtocolQueryResultClass;

GType protocol_query_result_get_type (void);
#define TYPE_PROTOCOL_QUERY_RESULT (protocol_query_result_get_type())
#define PROTOCOL_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROTOCOL_QUERY_RESULT, ProtocolQueryResult))
#define PROTOCOL_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PROTOCOL_QUERY_RESULT, ProtocolQueryResultClass))
#define IS_PROTOCOL_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROTOCOL_QUERY_RESULT))
#define IS_PROTOCOL_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PROTOCOL_QUERY_RESULT))
#define PROTOCOL_QUERY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROTOCOL_QUERY_RESULT, ProtocolQueryResultClass))

/* constants */

/* struct QueryExecutorExecuteArgs */
struct _QueryExecutorExecuteArgs
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolQuery * query;
  gboolean __isset_query;
};
typedef struct _QueryExecutorExecuteArgs QueryExecutorExecuteArgs;

struct _QueryExecutorExecuteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _QueryExecutorExecuteArgsClass QueryExecutorExecuteArgsClass;

GType query_executor_execute_args_get_type (void);
#define TYPE_QUERY_EXECUTOR_EXECUTE_ARGS (query_executor_execute_args_get_type())
#define QUERY_EXECUTOR_EXECUTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_QUERY_EXECUTOR_EXECUTE_ARGS, QueryExecutorExecuteArgs))
#define QUERY_EXECUTOR_EXECUTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_QUERY_EXECUTOR_EXECUTE_ARGS, QueryExecutorExecuteArgsClass))
#define IS_QUERY_EXECUTOR_EXECUTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_QUERY_EXECUTOR_EXECUTE_ARGS))
#define IS_QUERY_EXECUTOR_EXECUTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_QUERY_EXECUTOR_EXECUTE_ARGS))
#define QUERY_EXECUTOR_EXECUTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_QUERY_EXECUTOR_EXECUTE_ARGS, QueryExecutorExecuteArgsClass))

/* struct QueryExecutorExecuteResult */
struct _QueryExecutorExecuteResult
{ 
  ThriftStruct parent; 

  /* public */
  ProtocolQueryResult * success;
  gboolean __isset_success;
};
typedef struct _QueryExecutorExecuteResult QueryExecutorExecuteResult;

struct _QueryExecutorExecuteResultClass
{
  ThriftStructClass parent;
};
typedef struct _QueryExecutorExecuteResultClass QueryExecutorExecuteResultClass;

GType query_executor_execute_result_get_type (void);
#define TYPE_QUERY_EXECUTOR_EXECUTE_RESULT (query_executor_execute_result_get_type())
#define QUERY_EXECUTOR_EXECUTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_QUERY_EXECUTOR_EXECUTE_RESULT, QueryExecutorExecuteResult))
#define QUERY_EXECUTOR_EXECUTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_QUERY_EXECUTOR_EXECUTE_RESULT, QueryExecutorExecuteResultClass))
#define IS_QUERY_EXECUTOR_EXECUTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_QUERY_EXECUTOR_EXECUTE_RESULT))
#define IS_QUERY_EXECUTOR_EXECUTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_QUERY_EXECUTOR_EXECUTE_RESULT))
#define QUERY_EXECUTOR_EXECUTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_QUERY_EXECUTOR_EXECUTE_RESULT, QueryExecutorExecuteResultClass))

#endif /* PROTOCOL_TYPES_H */
